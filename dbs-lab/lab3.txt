1. Find courses that ran in Fall 2009 or in Spring 2010
> (select course_id from takes where year=2009 and semester='Fall') union (select course_id from takes where year=2010 and semester='Spring');

COURSE_I
--------
CS-101
CS-315
CS-319
CS-347
FIN-201
HIS-351
MU-199
PHY-101

8 rows selected.

2. Find courses that ran in Fall 2009 and in spring 2010
> (select course_id from takes where year=2009 and semester='Fall') intersect (select course_id from takes where year=2010 and semester='Spring');

COURSE_I
--------
CS-101


3. Find courses that ran in Fall 2009 but not in Spring 2010
> (select course_id from takes where year=2009 and semester='Fall') minus (select course_id from takes where year=2010 and semester='Spring');

COURSE_I
--------
CS-347
PHY-101

4. Find the name of the course for which none of the students registered.
> (select title from course) minus (select c.title from course c, takes t where t.course_id = c.course_id);

TITLE
--------------------------------------------------
Computational Biology


5. Find courses offered in Fall 2009 and in Spring 2010.
> select distinct(course_id) from takes where semester='Fall' and year=2009 and course_id in (select course_id from takes where semester='Spring' and year=2010);

COURSE_I
--------
CS-101


6. Find the total number of students who have taken course taught by the instructor 
with ID 10101.
> select count(distinct(t.id)) from takes t, teaches te where t.course_id = te.course_id and t.sec_id = te.sec_id and t.semester=te.semester and t.year = te.year and te.id in (select teaches.id from teaches where id=10101);
COUNT(DISTINCT(T.ID))
---------------------
                    6

7. Find courses offered in Fall 2009 but not in Spring 2010.
> select distinct(course_id) from takes where semester='Fall' and year=2009 and course_id not in (select course_id from takes where semester='Spring' and year=2010);

COURSE_I
--------
CS-347
PHY-101

8. Find the names of all students whose name is same as the instructorâ€™s name.
> select name from student where name in (select name from instructor);

NAME
--------------------
Brandt

9. Find names of instructors with salary greater than that of some (at least one) instructor
in the Biology department.
> NAME
--------------------
Einstein
Brandt
Wu
Gold
Kim
Singh
Katz

7 rows selected.

10. Find the names of all instructors whose salary is greater than the salary of all 
instructors in the Biology department.
> select name from instructor where salary >all(select salary from instructor where dept_name='Biology');

NAME
--------------------
Katz
Singh
Kim
Gold
Wu
Brandt
Einstein

7 rows selected.

11. Find the departments that have the highest average salary.
> select dept_name, avg(salary) as avgsal from instructor group by dept_name having(avg(salary) >= all(select avg(salary) from instructor group by dept_name));

DEPT_NAME                AVGSAL
-------------------- ----------
Physics                   91000


12. Find the names of those departments whose budget is lesser than the average salary 
of all instructors.
> select dept_name from department where budget <all(select avg(salary) from instructor);

DEPT_NAME
--------------------
History
Physics

13. Find all courses taught in both the Fall 2009 semester and in the Spring 2010 semester.
> SELECT course_id, title
  2  FROM course
  3  WHERE EXISTS (
  4      SELECT *
  5      FROM teaches T1
  6      WHERE T1.course_id = course.course_id
  7      AND T1.semester = 'Fall'
  8      AND T1.year = 2009
  9  )
 10  AND EXISTS (
 11      SELECT *
 12      FROM teaches T2
 13      WHERE T2.course_id = course.course_id
 14      AND T2.semester = 'Spring'
 15      AND T2.year = 2010
 16  );

COURSE_I TITLE
-------- --------------------------------------------------
CS-101   Intro. to Computer Science


14. Find all students who have taken all courses offered in the Biology department.
> select distinct(t.id) from takes t, course c1 where t.course_id=c1.course_id and exists(select t.id from takes, course c2 where c1.course_id=c2.course_id and takes.course_id = c2.course_id and c2.dept_name='Biology');

ID
-----
98988



15. Find all courses that were offered at most once in 2009.
> select c.title from course c where 1>=(select count(t.course_id) from takes t where c.course_id = t.course_id and t.year = 2009);

TITLE
--------------------------------------------------
Intro. to Biology
Genetics
Computational Biology
Robotics
Image Processing
Intro. to Digital Systems
Investment Banking
World History
Music Video Production
Physical Principles

10 rows selected.


16. Find all the students who have opted at least two courses offered by CSE department.
> select s.name from student s where 2<=(select count(t.course_id) from takes t, course c where t.id = s.id and c.dept_name = 'Comp. Sci.' and c.course_id = t.course_id group by s.name);

NAME
--------------------
Zhang
Shankar
Levy
Williams
Brown
Bourikas

6 rows selected.



17. Find the average instructors salary of those departments where the average salary is 
greater than 42000
> select dept_name, avgsal from (select avg(salary) AVGSAL, dept_name from instructor group by dept_name) where avgsal > 42000;

DEPT_NAME                AVGSAL
-------------------- ----------
Elec. Eng.                80000
Physics                   91000
Comp. Sci.           77333.3333
Finance                   85000
Biology                   72000
History                   61000

6 rows selected.

18.  Create a view all_courses consisting of course sections offered by Physics 
department in the Fall 2009, with the building and room number of each section.
> create view all_courses as (select s.course_id, sec_id, building, room_number from section s, course c where s.semester='Fall' and s.year=2009 and c.course_id = s.course_id and c.dept_name = 'Physics');

View created.


19. Select all the courses from all_courses view.
> select course_id from all_courses;

COURSE_I
--------
PHY-101

20.Create a view department_total_salary consisting of department name and total 
salary of that department.
> create view department_total_salary as (select dept_name, sum(salary) TOTSAL from instructor group by dept_name);

View created.

